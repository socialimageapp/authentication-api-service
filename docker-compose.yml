services:
    postgres:
        image: postgres:latest
        container_name: postgres_container
        restart: always
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: password
        networks:
            - my-net
        ports:
            - "5432:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
    pgadmin:
        image: dpage/pgadmin4:latest
        container_name: pgadmin_container
        restart: always
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@admin.com
            PGADMIN_DEFAULT_PASSWORD: admin
        networks:
            - my-net
        ports:
            - "5050:80"
        depends_on:
            - postgres
        volumes:
            - pgadmin_data:/var/lib/pgadmin

    redis:
        image: redis:latest
        container_name: redis_container
        restart: always
        hostname: redis
        ports:
            - "6379:6379"
        volumes:
            - redis_data:/data
        networks:
            - my-net

    redis-commander:
        image: rediscommander/redis-commander:latest
        container_name: redis_commander_container
        hostname: redis-commander
        restart: always
        environment:
            REDIS_HOSTS: redis_container
        ports:
            - "8081:8081"
        networks:
            - my-net
        depends_on:
            - redis
    fastify-auth:
        networks:
            - my-net
        env_file:
            - .config/environments/.env.staging
        build:
            context: . # Use the current directory (where Dockerfile and package.json are)
            dockerfile: Dockerfile
        container_name: fastify_auth_container
        restart: always
        environment:
            # Database connection
            DB_HOST: postgres_container
            DB_PORT: 5432
            DB_USER: postgres
            DB_PASSWORD: password
            DB_NAME: auth_db # Adjust if your app uses a specific database name
            # Redis connection
            REDIS_HOST: redis
            REDIS_PORT: 6379
            # JWT or other secrets
            # JWT_SECRET: ${JWT_SECRET_STAGING} # Define this in your .env
            # App port (if not default 3000)
            PORT: 7071
        ports:
            - "7071:7071"
        depends_on:
            - postgres
            - redis
        # volumes:
        #     - ./dist:/app/dist # Optional: for live updates during development

volumes:
    postgres_data:
    pgadmin_data:
    redis_data:
networks:
    my-net:
